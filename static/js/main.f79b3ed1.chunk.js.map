{"version":3,"sources":["components/styled/Flex.js","App.js","utils/canvasSetup.js","utils/strokeSetup.js","index.js"],"names":["getAlignValue","value","flex","css","direction","justifyContent","justifySelf","alignItems","alignSelf","wrap","margin","position","width","height","FlexSection","styled","div","main","a","article","section","App","useState","color","setColor","brushWidth","setBrushWidth","isStrokeVisible","setIsStrokeVisible","useEffect","canvas","document","getElementsByTagName","ctx","getContext","painting","draw","e","which","lineTo","clientX","clientY","stroke","beginPath","moveTo","addEventListener","canvasSetup","strokeStyle","lineWidth","lineCap","strokeSetup","className","onClick","type","min","max","onChange","target","hex","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f79b3ed1.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst getAlignValue = (value) => {\r\n  switch (value) {\r\n    case \"start\":\r\n      return \"flex-start\";\r\n    case \"end\":\r\n      return \"flex-end\";\r\n    case \"center\":\r\n      return \"center\";\r\n    case \"space-between\":\r\n      return \"space-between\";\r\n    case \"space-around\":\r\n      return \"space-around\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const flex = css`\r\n  display: flex;\r\n  ${({ direction }) => direction && `flex-direction: ${direction};`}\r\n  ${({ justifyContent }) =>\r\n    justifyContent && `justify-content: ${getAlignValue(justifyContent)};`}\r\n  ${({ justifySelf }) =>\r\n    justifySelf && `justify-self: ${getAlignValue(justifySelf)};`}\r\n  ${({ alignItems }) =>\r\n    alignItems && `align-items: ${getAlignValue(alignItems)};`}\r\n  ${({ alignSelf }) => alignSelf && `align-self: ${getAlignValue(alignSelf)};`}\r\n  ${({ wrap }) => wrap && `flex-wrap: ${wrap};`}\r\n  ${({ margin }) => margin && `margin: ${margin};`}\r\n  ${({ position }) => position && `position: ${position};`}\r\n  ${({ width }) => width && `width: ${width};`}\r\n  ${({ height }) => height && `height: ${height};`}\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  ${flex}\r\n`;\r\n\r\nexport const FlexMain = styled.main`\r\n  ${flex}\r\n`;\r\n\r\nexport const FlexAnchor = styled.a`\r\n  ${flex}\r\n`;\r\n\r\nexport const FlexArticle = styled.article`\r\n  ${flex}\r\n`;\r\n\r\nexport const FlexSection = styled.section`\r\n  ${flex}\r\n`;\r\n\r\nexport default Flex;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { HuePicker } from \"react-color\";\nimport { canvasSetup } from \"./utils/canvasSetup\";\nimport { strokeSetup } from \"./utils/strokeSetup\";\nimport { FlexSection } from \"./components/styled/Flex\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  const [color, setColor] = useState(\"#ffffff\");\n  const [brushWidth, setBrushWidth] = useState(\"8\");\n  const [isStrokeVisible, setIsStrokeVisible] = useState(false);\n\n  useEffect(() => {\n    canvasSetup();\n  }, []);\n\n  useEffect(() => {\n    strokeSetup(color, brushWidth);\n  }, [color, brushWidth]);\n\n  return (\n    <>\n      <canvas />\n      <FlexSection direction=\"column\" margin=\"5px 0 0 5px\">\n        <span\n          className=\"arrow\"\n          onClick={() => setIsStrokeVisible(!isStrokeVisible)}\n        >\n          &#10142;\n        </span>\n\n        {isStrokeVisible && (\n          <FlexSection direction=\"column\">\n            <input\n              className=\"brush-width\"\n              type=\"number\"\n              min=\"1\"\n              max=\"99\"\n              value={brushWidth}\n              onChange={(e) => setBrushWidth(e.target.value)}\n            />\n            <HuePicker\n              onChange={(e) => setColor(e.hex)}\n              color={color}\n              direction={\"vertical\"}\n              height={\"316px\"}\n              width={\"16px\"}\n            />\n          </FlexSection>\n        )}\n      </FlexSection>\n    </>\n  );\n};\n\nexport default App;\n","export const canvasSetup = () => {\r\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  canvas.width = 800;\r\n  canvas.height = 466;\r\n\r\n  let painting = false;\r\n\r\n  function startPosition(e) {\r\n    painting = true;\r\n    draw(e);\r\n  }\r\n\r\n  function finishedPosition() {\r\n    painting = false;\r\n    ctx.beginPath();\r\n  }\r\n\r\n  function draw(e) {\r\n    if (!painting || e.which !== 1) return;\r\n\r\n    ctx.lineTo(e.clientX, e.clientY);\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(e.clientX, e.clientY);\r\n  }\r\n\r\n  canvas.addEventListener(\"mousedown\", startPosition);\r\n  canvas.addEventListener(\"mouseup\", finishedPosition);\r\n  canvas.addEventListener(\"mousemove\", draw);\r\n};\r\n","export const strokeSetup = (color, brushWidth) => {\r\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = brushWidth;\r\n  ctx.lineCap = \"round\";\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}